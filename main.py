import telebot
import random
import time
import json
import os

TOKEN = os.getenv("TOKEN")
bot = telebot.TeleBot(TOKEN)

STATS_FILE = "stats.json"
user_last_message_time = {}

def load_stats():
    try:
        with open(STATS_FILE, "r") as file:
            return json.load(file)
    except (FileNotFoundError, json.JSONDecodeError):
        return {}

def save_stats(stats):
    with open(STATS_FILE, "w") as file:
        json.dump(stats, file)

user_stats = load_stats()

@bot.message_handler(commands=['start'])
def send_start(message):
    bot.reply_to(message, "–ü—Ä–∏–≤—ñ—Ç! –Ø –ü–æ—Ç—É–∂–Ω–æ–º–µ—Ç—Ä üí™ –í–∏–º—ñ—Ä—è—é –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å –±—É–¥—å-—è–∫–æ–≥–æ —Å–ª–æ–≤–∞, –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–±–æ GIF —É %. –í—ñ–¥–ø—Ä–∞–≤ —â–æ—Å—å —ñ –ø–µ—Ä–µ–≤—ñ—Ä —Å–≤–æ—é —Å–∏–ª—É! ‚ö°")

@bot.message_handler(commands=['help'])
def send_help(message):
    bot.reply_to(message, "ü§ñ –ü—Ä–æ—Å—Ç–æ –≤—ñ–¥–ø—Ä–∞–≤ –º–µ–Ω—ñ —Å–ª–æ–≤–æ, —Ñ–æ—Ç–æ, –Ω–∞–ª—ñ–ø–∫—É –∞–±–æ GIF, —ñ —è –≤–∏–∑–Ω–∞—á—É —ó—Ö–Ω—é –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å —É %. üöÄ")

@bot.message_handler(commands=['about'])
def send_about(message):
    bot.reply_to(message, "–Ø –±–æ—Ç, —â–æ –≤–∏–º—ñ—Ä—é—î –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å —Å–ª—ñ–≤, –∑–æ–±—Ä–∞–∂–µ–Ω—å —Ç–∞ GIF —É %. –ù–∞–ø–∏—Å–∞–Ω–∏–π –Ω–∞ Python –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º Telebot! üíª")

@bot.message_handler(commands=['stats'])
def send_stats(message):
    user_id = str(message.chat.id)
    if user_id in user_stats:
        total_attempts = user_stats[user_id]['attempts']
        avg_power = user_stats[user_id]['total_power'] / total_attempts
        bot.reply_to(message, f"üìä –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n–í—Å—å–æ–≥–æ —Å–ø—Ä–æ–±: {total_attempts}\n–°–µ—Ä–µ–¥–Ω—è –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å: {avg_power:.2f}%")
    else:
        bot.reply_to(message, "üìä –£ —Ç–µ–±–µ —â–µ –Ω–µ–º–∞—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –í—ñ–¥–ø—Ä–∞–≤ —â–æ—Å—å, —â–æ–± –ø–æ—á–∞—Ç–∏!")

@bot.message_handler(commands=['reset'])
def reset_stats(message):
    user_id = str(message.chat.id)
    if user_id in user_stats:
        del user_stats[user_id]
        save_stats(user_stats)
        bot.reply_to(message, "üîÑ –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫–∏–Ω—É—Ç–∞!")
    else:
        bot.reply_to(message, "üìä –£ —Ç–µ–±–µ –Ω–µ–º–∞—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è.")

@bot.message_handler(content_types=['text', 'photo', 'sticker', 'animation'])
def send_random_percentage(message):
    user_id = str(message.chat.id)
    current_time = time.time()

    if user_id in user_last_message_time and current_time - user_last_message_time[user_id] < 3:
        bot.reply_to(message, "‚è≥ –ü–æ–≤—ñ–ª—å–Ω—ñ—à–µ, –≤–æ—ó–Ω! –ß–µ–∫–∞–π –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –Ω–æ–≤–∏–º –∑–∞–ø–∏—Ç–æ–º. ‚ö°")
        return

    user_last_message_time[user_id] = current_time
    processing_message = bot.reply_to(message, "üîÑ –†–∞—Ö—É—é –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å...")
    time.sleep(2)
    bot.delete_message(message.chat.id, processing_message.message_id)

    random_percentage = random.randint(1, 100)

    if user_id not in user_stats:
        user_stats[user_id] = {'attempts': 0, 'total_power': 0}

    user_stats[user_id]['attempts'] += 1
    user_stats[user_id]['total_power'] += random_percentage
    save_stats(user_stats)

    text_reactions = ["üíÄ", "üòÖ", "ü§£", "ü§î", "üí™", "üòé", "üî•", "üöÄ", "üéâ", "üèÜ", "‚ú®", "‚ö°", "üòà", "üëë", "ü¶æ"]
    photo_compliments = ["üì∏ –û—Ü–µ —Ç–∞–∫ –º–∏—Å—Ç–µ—Ü—Ç–≤–æ!", "üñºÔ∏è –¶–µ –≤–∏–≥–ª—è–¥–∞—î —à–∏–∫–∞—Ä–Ω–æ!", "‚ú® –ü—Ä–æ—Å—Ç–æ –≤–∞—É!", "üé® –¢–∞–∫ –∫—Ä–∞—Å–∏–≤–æ, —â–æ –∞–∂ –æ—á—ñ —Ä–æ–∑–±—ñ–≥–∞—é—Ç—å—Å—è!", "üî• –¶–µ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π —à–µ–¥–µ–≤—Ä!", "üòç –í—Ä–∞–∂–∞—é—á–µ!", "üì∑ –ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Ä—ñ–≤–µ–Ω—å!", "üåü –ù–µ–π–º–æ–≤—ñ—Ä–Ω–æ!"]
    sticker_reactions = ["üëç –ö—Ä—É—Ç–∞ –Ω–∞–ª—ñ–ø–∫–∞!", "üî• –¶–µ –∫–ª–∞—Å–∏–∫–∞!", "üòÜ –î—É–∂–µ —Å–º—ñ—à–Ω–æ!", "üé≠ –¢–∏ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π –∞—Ä—Ç–∏—Å—Ç!", "ü§£ –ü—Ä–æ—Å—Ç–æ —Ç–æ–ø!", "üíØ –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ!"]
    gif_reactions = ["üòÇ –¶–µ —à–∏–∫–∞—Ä–Ω–æ!", "üé¨ –ì–æ–ª–ª—ñ–≤—É–¥ –Ω–µ—Ä–≤–æ–≤–æ –ø–∞–ª–∏—Ç—å!", "üî• –¶–µ –≤–∞—Ä—Ç–µ –û—Å–∫–∞—Ä–∞!", "üòÜ –û—Ü–µ –º–µ–º!", "üé≠ –ü—Ä–æ—Å—Ç–æ –≥–µ–Ω—ñ–∞–ª—å–Ω–æ!"]

    if message.content_type == 'text':
        reactions = text_reactions
        response_text = f"'{message.text}' –º–∞—î –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å: {random_percentage}% üí•\n{random.choice(reactions)} –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑!"
    elif message.content_type == 'photo':
        reactions = photo_compliments
        response_text = f"–¶–µ —Ñ–æ—Ç–æ –º–∞—î –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å: {random_percentage}% üí•\n{random.choice(reactions)}"
    elif message.content_type == 'sticker':
        reactions = sticker_reactions
        response_text = f"–¶—è –Ω–∞–ª—ñ–ø–∫–∞ –º–∞—î –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å: {random_percentage}% üí•\n{random.choice(reactions)}"
    elif message.content_type == 'animation':
        reactions = gif_reactionsresponse_text= f"–¶–µ–π GIF –º–∞—î –ø–æ—Ç—É–∂–Ω—ñ—Å—Ç—å: {random_percentage}% üí•\n{random.choice(reactions)}"
    else:
        response_text = "ü§∑‚Äç‚ôÇÔ∏è –©–æ—Å—å —Ü—ñ–∫–∞–≤–µ, –∞–ª–µ —è –Ω–µ –∑–Ω–∞—é, —è–∫ —Ü–µ –æ—Ü—ñ–Ω–∏—Ç–∏!"

    bot.reply_to(message, response_text)

if name == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    bot.polling(none_stop=True)